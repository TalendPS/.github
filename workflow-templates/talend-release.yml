name: Talend Full Release

on:
  release:
    types:
      - published

  workflow_dispatch:
    inputs:
      ITEM_FILTER:
        description: Item Filter
        required: false
        type: string
      VERSION_NUMBER:
        description: x.y.z formatted version number
        required: true
        type: string
      ADDITIONAL_MVN_ARGS:
        description: Additional Maven Settings
        required: false
        type: string

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

permissions:
  contents: write
  checks: write
  actions: write
  packages: write

jobs:
  code-check:
    uses: TalendPS/CICD_REF/.github/workflows/talend-code-scanner.yml@master
    secrets:
      GIT_TOKEN: ${{ secrets.GIT_TOKEN }}

  setMavenVersion:
    needs: code-check
    uses: TalendPS/CICD_REF/.github/workflows/talend-set-mvn-version.yml@master
    with:
      VERSION_NUMBER: ${{ github.event.release.tag_name || inputs.VERSION_NUMBER }}
    secrets:
      GIT_TOKEN: ${{ secrets.GIT_TOKEN }}

  build:
    needs: setMavenVersion
    uses: TalendPS/CICD_REF/.github/workflows/talend-ci.yml@master
    with:
      BUILD_GOAL: package
      ATTACH_ARTIFACTS: true
      ITEM_FILTER: ${{ inputs.ITEM_FILTER }}
      ADDITIONAL_MVN_ARGS:  ${{ inputs.ADDITIONAL_MVN_ARGS }}
    secrets:
      GIT_TOKEN: ${{ secrets.GIT_TOKEN }}

  deploy-to-dev:
    needs: build
    uses: TalendPS/CICD_REF/.github/workflows/talend-cloud-deployer.yml@master
    with:
      ENVIRONMENT: DEV
      ADDITIONAL_MVN_ARGS: ${{ inputs.ADDITIONAL_MVN_ARGS }}
      TASK_TAG: ${{ github.event.release.tag_name || inputs.VERSION_NUMBER }}
    secrets:
      GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
      TALEND_CLOUD_TOKEN: ${{ secrets.TALEND_CLOUD_TOKEN }}

  cve-check:
    needs: build
    uses: TalendPS/CICD_REF/.github/workflows/talend-cve-scanner.yml@master
    secrets:
      GIT_TOKEN: ${{ secrets.GIT_TOKEN }}

  deploy-to-uat:
    needs: deploy-to-dev
    uses: TalendPS/CICD_REF/.github/workflows/talend-cloud-promotion.yml@master
    with:
      ENVIRONMENT: UAT
      ARTIFACT_NAME: DEV-deployments
      TASK_TAG: ${{ github.event.release.tag_name || inputs.VERSION_NUMBER }}
    secrets:
      TALEND_CLOUD_TOKEN: ${{ secrets.TALEND_CLOUD_TOKEN }}

  run-on-uat:
    needs: deploy-to-uat
    if: needs.deploy-to-uat.outputs.TASK_SUCCESS > 0
    uses: TalendPS/CICD_REF/.github/workflows/talend-cloud-task-runner.yml@master
    with:
      ENVIRONMENT: UAT
    secrets:
      TALEND_CLOUD_TOKEN: ${{ secrets.TALEND_CLOUD_TOKEN }}

  validate-on-uat:
    needs: run-on-uat
    if: needs.run-on-uat.outputs.SUCCESS > 0
    uses: TalendPS/CICD_REF/.github/workflows/talend-cloud-task-validator.yml@master
    with:
      ENVIRONMENT: UAT
      continue-on-error: true
    secrets:
      TALEND_CLOUD_TOKEN: ${{ secrets.TALEND_CLOUD_TOKEN }}

  deploy-to-prod:
    needs: validate-on-uat
    uses: TalendPS/CICD_REF/.github/workflows/talend-cloud-promotion.yml@master
    with:
      ENVIRONMENT: PROD
      ARTIFACT_NAME: UAT-promotions
      TASK_TAG: ${{ github.event.release.tag_name || inputs.VERSION_NUMBER }}
    secrets:
      TALEND_CLOUD_TOKEN: ${{ secrets.TALEND_CLOUD_TOKEN }}

  # cleanup-uat:
  #   needs: deploy-to-prod
  #   uses: TalendPS/CICD_REF/.github/workflows/talend-cloud-task-disabler.yml@master
  #   with:
  #     ENVIRONMENT: UAT
  #     TASK_TAG: IntegrationTest
  #   secrets:
  #     TALEND_CLOUD_TOKEN: ${{ secrets.TALEND_CLOUD_TOKEN }}